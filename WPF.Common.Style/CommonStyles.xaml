<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CommonBrushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!-- Control template when validation fails.-->
    <ControlTemplate x:Key="ValidationErrorTemplate">
        <StackPanel>
            <AdornedElementPlaceholder />
            <TextBlock Text="{Binding [0].ErrorContent}" 
                           Foreground="Red" />
        </StackPanel>
    </ControlTemplate>

    <!-- Control template with margin for Quantity textbox when validation fails.-->
    <ControlTemplate x:Key="ValidationErrorTemplateWithMargin">
        <StackPanel>
            <AdornedElementPlaceholder />
            <TextBlock Text="{Binding [0].ErrorContent}" 
                           Foreground="Red" Margin="-22,0,0,0" />
        </StackPanel>
    </ControlTemplate>

    <!-- Control template with margin for Quantity textbox when there are no errors.-->
    <ControlTemplate x:Key="NoErrorTemplate">
        <Border/>
    </ControlTemplate>

    <!-- Control template for button to override default background color on mouse over.-->
    <ControlTemplate  x:Key="ButtonControlTemplate"
                      TargetType="Button">
        <Border Background="{TemplateBinding Background}" 
                BorderThickness="1" 
                BorderBrush="{StaticResource ERPBlueBrush}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>

    <!-- Style for all textbox controls with validation error control template.-->
    <Style TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{StaticResource ERPBlueBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTextEntered}" Value="true">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTextEntered}" Value="false">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource NoErrorTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Style for all combobox controls with validation error control template.-->
    <Style TargetType="ComboBox">
        <Setter Property="BorderBrush" Value="{StaticResource ERPBlueBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTextEntered}" Value="true">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTextEntered}" Value="false">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource NoErrorTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Style for date picker control with validation error control template.-->
    <Style TargetType="DatePicker">
        <Setter Property="BorderBrush" Value="{StaticResource ERPBlueBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
    </Style>

    <!-- Style for other button controls.-->
    <Style x:Key="CommonButtonStyle"
             TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ERPYellowBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ERPBlueBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ERPYellowBrush}"/>
                <Setter Property="Background" Value="{StaticResource ERPBlueBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for text block controls.-->
    <Style x:Key="CommonTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ERPBlueBrush}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Style for submit button control with validation of all other controls.-->
    <Style x:Key="SubmitButtonStyle"
                TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ERPYellowBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ERPBlueBrush}"/>
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="FontSize" Value="14"/>
        
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=NameTextBox}" Value="False"/>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=GenderComboBox}" Value="False"/>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=QuantityTextBox}" Value="False"/>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ProductTextBox}" Value="False"/>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=DateOfPurchaseDatePicker}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True"/>
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ERPYellowBrush}"/>
                <Setter Property="Background" Value="{StaticResource ERPBlueBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>